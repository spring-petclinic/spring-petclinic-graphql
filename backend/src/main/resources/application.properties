# DataSource configuration omitted,
# as Spring Boot 3.1+ uses configuration from
# docker-compose/TestContainer automatically
spring.jpa.hibernate.ddl-auto=validate

logging.level.org.springframework.security=TRACE
logging.level.org.springframework.graphql=TRACE
logging.level.graphql=INFO



#----------------------------------------------------------------
# Server Configuration
#----------------------------------------------------------------
server.port=9977

#----------------------------------------------------------------
# Logging
#----------------------------------------------------------------
logging.level.org.springframework=INFO

#----------------------------------------------------------------
# Spring Security
#----------------------------------------------------------------
spring.security.filter.dispatcher-types=request,error
# Note that in real life:
# your would NEVER CHECK IN KEYS TO GIT (esp. no private keys)
# This is only to make the demo easier:
#  - no need to generate the keys yourself
#  - ability to provide stable, long living tokens for easier (live) demos
# NEVER check in your keys

publicKey=classpath:keys/public_key.pem
privateKey=classpath:keys/private_key.pem

#----------------------------------------------------------------
# spring-graphql config
#----------------------------------------------------------------
# Note that we DO NOT use the embedded GraphiQL UI from
# spring-graphql yet, because we use our own version
# that contains a login form
# Maybe we can switch to cookie-based authentication
# later
spring.graphql.graphiql.enabled=true

# !!! For CORS configuration see SecurityConfig class !!!

# GraphQL endpoints for Web and WebSocket requests
# Note that this endpoints are accessible only with a
# valid JWT token.
# You can find a valid token after login with GraphiQL
# or in the server log file after starting the server
# (search for "Never Expiring JWT Token")
spring.graphql.path=/graphql
spring.graphql.websocket.path=/graphqlws

